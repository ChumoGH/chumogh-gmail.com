#!/bin/bash
source cabecalho
mt=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f2)
mf=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f4)
mb=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f6)
ml=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f7)
pp=$(cat /proc/cpuinfo | grep "model name" | uniq | awk -F ":" '{print $2}')
csss=$(cat /proc/cpuinfo | grep processor | wc -l)
usoo=$(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage "%"}')
CPU=$(echo $usoo | awk '{printf("%d\n",$1 + 0.5)}')
##
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
##
ram1=$(free -h | grep -i mem | awk {'print $2'})
ram2=$(free -h | grep -i mem | awk {'print $4'})
ram3=$(free -h | grep -i mem | awk {'print $3'})
##
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
##
opti=$(cat < /bin/ejecutar/val)
if [ "$opti" = "0" ]; then
_opti="\033[1;31m${txt[11]}"
else
_opti="\033[1;32m${txt[10]}"
fi
[[ -e /etc/bash.bashrc-bakup ]] && _autorun="\033[1;32m${txt[10]}" || _autorun="\033[1;31m${txt[11]}"
msg -bar#echo -e "${cor[1]} ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪ ${cor[0]}"
#echo -e $pp $csss "CPUs"
echo -e "\033[1;34m  ● \033[1;31m${txt[345]} \033[0;33m${txt[343]} "
#echo -e "${cor[1]} ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪ ${cor[0]}"
#echo -e "${cor[2]} ⌐╦╦═─ ${cor[5]} ${txt[4]}"
echo -e "${cor[1]} ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪ ${cor[0]}"
echo -e "\033[1;34m ●\033[1;31m TOTAL:\033[1;32m "$mt "\033[1;34m   ●  \033[1;32m Libre:\033[1;31m "$ram2 
echo -e "\033[1;34m ●\033[1;31m Uso de RAM:\033[1;32m" msg -bra $_usor "\033[1;34m   ●  \033[1;32m Uso CPU:\033[1;31m" $CPU"%"
echo -e "${cor[1]} ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪ ${cor[0]}"
echo -e "${cor[2]} [1] >${cor[3]} ${txt[5]} "
echo -e "${cor[2]} [2] >${cor[3]} ${txt[6]}$_badvpn${cor[3]}${txt[455]}$_tcpspeed"
echo -e "${cor[2]} [3] >${cor[0]}\033[0;33m [!]\033[1;32m OPTIMIZAR VPS "
echo -e "${cor[2]} [4] >${cor[0]}\033[1;31m [!] ${txt[339]}"
echo -e "${cor[2]} [5] >${cor[3]} ${txt[12]}"
echo -e "${cor[2]} [6] >${cor[3]} ${txt[20]} $VERIFICAR_PID"
echo -e "${cor[2]} [7] >${cor[3]} ${txt[347]}\033[0;33m ${txt[342]}"
##\033[0;33m [?]\033[1;32m ${txt[341]}\033[0;33m ${txt[342]} "
echo -e "${cor[2]} [8] >${cor[3]} ${txt[322]} $_autorun"
echo -e "${cor[2]} [9] >${cor[3]} ${txt[256]}"
echo -e "${cor[2]} [10] >${cor[3]} Optimizacion Automatica $_opti"
#echo -e "${cor[2]} [11] >${cor[3]} Optimizacion Automatica $_opti"
echo -e "${cor[2]} [99] >\033[0;33m [!] ${txt[340]}\033[1;32m"
echo -e "${cor[2]} [0] >${cor[4]} ${txt[13]}"
echo -e "${cor[1]} ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪ ${cor[0]}"
