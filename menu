#!/bin/bash
source menu-txt
echo -ne "${cor[6]}"
read -p " ${txt[9]} " _selecao
case $_selecao in
0)
clear
echo -e "${cor[0]}"
exit
;;
1)
clear
source user
exit
;;
2)
clear
source ferramentas
exit
;;
3)
mt=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f2)
mf=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f4)
mb=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f6)
ml=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f7)
echo -e "M Usable:" $ml " ●   M Libre:" $mf "  ●   M Cache:" $mb
echo -e "OPTIMIZANDO SERVIDOR"
echo -e "$barra"
sleep 1
echo -e "$barra"
sleep 0.5
echo -e "${cor[1]} ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ ${cor[0]}"
echo "Limpiando sistema y Reiniciando Servicios"
echo 3 > /proc/sys/vm/drop_caches 1> /dev/null 2> /dev/null
sysctl -w vm.drop_caches=3 1> /dev/null 2> /dev/null
swapoff -a && swapon -a 1> /dev/null 2> /dev/null
service ssh restart 1> /dev/null 2> /dev/null
service squid restart 1> /dev/null 2> /dev/null
service squid3 restart 1> /dev/null 2> /dev/null
echo "Limpieza Finalizada"
echo 3 > /proc/sys/vm/drop_caches
sysctl -w vm.drop_caches=3 > /dev/null 2>&1
rm -rf /tmp/*
echo -e "${cor[1]} ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ ${cor[0]}"
sleep 0.5
fun
mt=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f2)
mf=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f4)
mb=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f6)
ml=$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f7)
echo -e "M Usable:" $ml " ●   M Libre:" $mf "  ●   M Cache:" $mb
read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
clear
source menu
;;
4)
remover_adm
exit
;;
5)
funcao_cores
source menu
exit
;;
6)
funcao_verificacao > /dev/null 2>&1
source menu
exit
;;
7)
clear
    echo -e "${cor[1]} ➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶ ${cor[0]}"
    echo -e "${cor[2]} \033[1;32m          * ESTA OPCION ES EXPERIMENTAL *"
    echo -e "${cor[2]} \033[1;32mPara continuar debes tener configurado un dominio en el VPS"
    echo -e "${cor[2]} \033[1;32m     Dominio es la URL de acceso al servidor, No la IP"
    echo -e "${cor[2]} \033[1;35m***********************************************************"
    echo -e "Si Cumples con ese requisito dijita Y/y, Caso contrario N/n para salir";
	echo -ne "OPCION: ";read yn
    if [[ $yn = @(s|S|y|Y) ]];
	then
        echo -e "Dijitaste que Si, Vamos a Proseguir" 
        mkdir -p chumogh
        cd chumogh
		wget -q https://raw.githubusercontent.com/ChumoGH/chumogh-gmail.com/master/cgh-v2ray.sh
        chmod +x cgh-v2ray.sh
        ./cgh-v2ray.sh
        cd
        cd
        rm -rf chumogh
		exit
		else
        echo "NO CUMPLES REQUISITOS, Vamos a volver al menu"
		source menu
    fi
echo -e "${cor[1]} INSTALACION FINALIZADA!!!!! ${cor[0]}"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
souce menu
;;
8)
if [[ -e /etc/bash.bashrc-bakup ]]; then
mv -f /etc/bash.bashrc-bakup /etc/bash.bashrc
cat /etc/bash.bashrc | grep -v "/bin/adm" > /tmp/bash
mv -f /tmp/bash /etc/bash.bashrc
echo -e "${cor[1]} ➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶ ${cor[0]}"
echo -e "${cor[2]} \033[1;32mAUTOEJECUCION DESACTIVADA"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
elif [[ -e /etc/bash.bashrc ]]; then
cat /etc/bash.bashrc|grep -v /bin/cgh > /etc/bash.bashrc.2
echo '/bin/adm' >> /etc/bash.bashrc.2
cp /etc/bash.bashrc /etc/bash.bashrc-bakup
mv -f /etc/bash.bashrc.2 /etc/bash.bashrc
echo 'menu' > /bin/adm
chmod +x /bin/adm
echo -e "${cor[1]} ➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶ ${cor[0]}"
echo -e "${cor[2]} \033[1;32mAUTOEJECUCION ACTIVADA"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
fi
sleep 2s
source menu
exit
;;
9)
$value > /dev/null 2>&1
chmod +x /etc/adm-lite/*
[[ -e /etc/adm-lite/idioma_menuinst ]] && idioma=$(cat /etc/adm-lite/idioma_menuinst|head -1) || idioma="pt"
value=$(vary_rex "2f6574632f61646d2d6c6974652f6d656e755f696e7374")
${value} ${idioma}
;;
10)	
clear
source cabecalho
echo -e "${cor[1]} ➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶ ${cor[0]}"
echo -e "${cor[2]} \033[1;32mMenu de Administracion de Puertos"
echo -e "${cor[2]} 0] > \033[1;31mVolver"
echo -e "${cor[2]} 1] > \033[1;31mDetener Puertos"
echo -e "${cor[2]} 2] > \033[1;31mDesinstalar Puerto."
echo -e "${cor[2]} 3] > \033[1;31mIniciar Puerto."
echo -e "${cor[2]} 4] > \033[1;31mMostrar Configuraciones"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
read -p " Escoje " ppp
case $ppp in
	0)
	clear
	echo -e "${cor[0]}"
	exit
	;;
	1)
	clear
	figlet ChumoGH | lolcat
	echo -e "${cor[2]} \033[1;32mFUNCION EN DISEÑO " $ppp
	source menu
	exit
	;;
	2)
	clear
	figlet -p -f slant < /root/name | lolcat
		echo -e "\033[1;37m      【     ★ ChumoGH Packet 2020 ★     】\033[0m"
		echo -e "[\033[1;31m-\033[1;33m]\033[1;31m #######################################\033[1;33m"
		echo -e "\033[1;37mSeleccione una opcion a desinstalar:    Para Salir Ctrl + C\033[1;33m
		[\033[1;30m1\033[1;33m] BADVPN \033[1;33m
		[\033[1;30m2\033[1;33m] FAIL2BAN \033[1;33m
		[\033[1;30m3\033[1;33m] STUNNEL4 \033[1;33m
		[\033[1;30m4\033[1;33m] WEBMIN \033[1;33m
		[\033[1;30m5\033[1;33m] PYTHON \033[1;33m
		[\033[1;30m6\033[1;33m] SHADOWSOCKS \033[1;33m
		[\033[1;30m7\033[1;33m] DROPBEAR \033[1;33m
		[\033[1;30m8\033[1;33m] OPENVPN \033[1;33m
		[\033[1;30m9\033[1;33m] LIBRERIAS 32BITS \033[1;33m
		[\033[1;30m10\033[1;33m] NGINX \033[1;33m
		[\033[1;30m11\033[1;33m] SQUID \033[1;33m
		[\033[1;30m12\033[1;33m] V2RAY \033[1;33m
		[\033[1;30m0\033[1;33m] < REGRESAR \033[1;33m"
		read -p ": " opcao
		opcao=$1		
		case $opcao in
		1)
		removerbadvpn;;
		2)
		removerfail2ban;;
		3)
		removerstunnel;;
		4)
		removerwebmin;;
		5)
		removerpython;;
		6)
		removershadowsocks;;
		7)
		removerdropbear;;
		8)
		removeropenvpn;;
		9)
		removerlibs32;;
		10)
		removernginx;;
		11)
		removersquid;;
		12)
		removerv2ray;;
		0)
		source menu;;
		esac
	exit
	;;
	3)
	clear
	figlet ChumoGH
	echo -e "${cor[2]} \033[1;32mFUNCION EN DISEÑO" $ppp
	source menu
	exit
	;;
	4)
		figlet -p -f slant < /root/name | lolcat
		echo -e "\033[1;37m      【     ★ ChumoGH Packet 2020 ★     】\033[0m"
		echo -e "\033[1;37m      【    Escoje la Config a Mostrar    】\033[0m"
		echo -e "[\033[1;31m-\033[1;33m]\033[1;31m #######################################\033[1;33m"
		echo -e "\033[1;37mSeleccione una opcion:    Para Salir Ctrl + C\033[1;33m
		[\033[1;30m1\033[1;33m] SSH                 ›   \033[1;32m$xssh \033[1;33m
		[\033[1;30m2\033[1;33m] DROPBEAR            ›   \033[1;32m$xdropbear\033[1;33m
		[\033[1;30m3\033[1;33m] STUNNEL4            ›   \033[1;32m$xstunnel \033[1;33m
		[\033[1;30m4\033[1;33m] SQUID               ›   \033[1;32m$xsquid \033[1;33m
		[\033[1;30m5\033[1;33m] PROXY PYTHON        ›   \033[1;32m$xpython \033[1;33m
		[\033[1;30m6\033[1;33m] SHADOWSOCKS         ››  \033[1;33m
		[\033[1;30m7\033[1;33m] SOCKS5              ›   \033[1;32m$xsocks5 \033[1;33m
		[\033[1;30m8\033[1;33m] SOCKD               ›   \033[1;32m$xsocksd \033[1;33m
		[\033[1;30m9\033[1;33m] OPENVPN             ›   \033[1;32m$xopenvpn \033[1;33m
		[\033[1;30m0\033[1;33m] < REGRESAR                 \033[1;33m"
		read -p ": " opcao
		opcao=$1
		case $opcao in	
		1)
		configssh;;
		2)
		configdropbear;;
		3)
		configstunnel;;
		4)
		configsquid;;
		5)
		configproxy;;
		6)
		configshadow;;
		7)
		configsocks5;;
		8)
		configsockd;;
		9)
		configopenvpn;;
		0)
		exit;;
		esac
	*)
	source menu
	;;
	esac
read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
source menu
exit
;;
11)
figlet -p -f slant < /root/name
echo -e "${cor[1]} ➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶➶ ${cor[0]}"
echo -e "${cor[2]} \033[1;32mESTA FUNCION AGREGARA EN EL CRONTAB UN AUTOEJECUCION"
echo -e "${cor[2]} \033[1;32m. Este Metodo Optimizara y limpiara Tu SERVIDOR"
echo -e "${cor[2]} \033[1;32mDe manera automatica para evitar Lags y lentitud cada 5/"
echo -e "${cor[2]} \033[1;32mSI ESTAS DE ACUERDO, PRESIONA 1, CASO CONTRARIO 0"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
echo -e "${cor[1]} ➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷➷ ${cor[0]}"
read -p " Escoje :" rrr
case $rrr in
	0)
	clear
	echo -e "${cor[0]}"
	read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
        clear
        source menu
	exit
	;;
	1)
	clear
	figlet ChumoGH
	echo -e "${cor[2]} \033[1;32mFUNCION EN DISEÑO" $rrr
	validar1=$(cat < /bin/ejecutar/val1)
	if [ "$validar1" = "activado" ]; then
	figlet -p -f slant < /root/name
		echo -e "${cor[2]} \033[1;32mEsta Funcion ya esta en " $validar1
		read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
	else
	figlet -p -f slant < /root/name
		echo -e "${cor[2]} \033[1;32mEsta Funcion esta en NULL" $validar1
		bash /etc/adm-lite/optimizador
		echo "activado" > /bin/ejecutar/val1
		opti=1
		echo $opti > /bin/ejecutar/val
		fun_bar
		read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
	fi
	source menu
	exit
	;;
	*)
	echo "AGREGADA EXITOSAMENTE"
	read -rsp $'Presiona una TECLA o Espere 5 segundos para continuar...\n' -n 1 -t 5;
	source menu
	;;
	esac
sleep 1
source menu
;;
99)
fun_atualizar
exit
;;
*)
source menu
;;
esac

function removerv2ray(){
source <(curl -sL https://git.io/fNgqx) --remove
cgh
}
function removerbadvpn(){
badvpn stop
killall badvpn-udpgw
rm /bin/badvpn
rm /usr/bin/badvpn-udpgw
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerfail2ban(){
apt-get purge fail2ban -y
apt-get remove fail2ban -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerstunnel(){
service stunnel4 stop 1> /dev/null 2> /dev/null
killall stunnel4 1> /dev/null 2> /dev/null
apt-get -y purge stunnel4 1> /dev/null 2> /dev/null
apt-get -y remove stunnel4 1> /dev/null 2> /dev/null
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerwebmin(){
apt-get purge webmin -y
apt-get remove webmin -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerpython(){
killall python
pkill python
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removershadowsocks(){
cd /etc/VpsPackdir/
./shadowsocks.sh uninstall
cd /root
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerdropbear(){
service dropbear stop
apt-get purge dropbear -y
apt-get remove dropbear -y
service dropbear stop
/etc/init.d/dropbear stop
killall dropbear
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removeropenvpn(){
apt-get purge openvpn -y
apt-get remove openvpn -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removerlibs32(){
apt-get purge ia32-libs -y
apt-get remove ia32-libs -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removernginx(){
apt-get purge nginx -y
apt-get remove nginx -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function removersquid(){
apt-get purge squid -y
apt-get remove squid -y
apt-get purge squid3 -y
apt-get remove squid3 -y
clear
echo -e "\033[1;37m  Desinstalacion Completa \033[0m"
echo -e "\033[1;31mINSTALACION FINALIZADA - PRESIONE ENTER\033[0m"
read -p " "
cgh
}
function configssh(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion SSH\033[0m"
cat /etc/ssh/sshd_config
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configdropbear(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Dropbear\033[0m"
echo -e "\033[1;37m › /etc/default/dropbear\033[0m"
cat /etc/default/dropbear
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configstunnel(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Stunnel\033[0m"
echo -e "\033[1;37m › /etc/stunnel/stunnel.conf\033[0m"
cat /etc/stunnel/stunnel.conf
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configsquid(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Squid\033[0m"
cat /etc/squid/squid.conf
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configproxy(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Proxy Python\033[0m"
echo -e "\033[1;37m › /root/proxy.py\033[0m"
cat /root/proxy.py
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configsocks5(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Socks5\033[0m"
echo -e "\033[1;37m › /etc/danted.conf\033[0m"
cat /etc/danted.conf
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configsockd(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Sockd\033[0m"
echo -e "\033[1;37m › /home/dante/danted.conf\033[0m"
cat /home/dante/danted.conf
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configopenvpn(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Openvpn\033[0m"
echo -e "\033[1;37m › /etc/openvpn/server.conf\033[0m"
cat /etc/openvpn/server.conf
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configshadow(){
if [[ $1 == "" ]]
then
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Shadowsocks\033[0m"
echo -e "\033[1;37mSeleccione una opcion:    Para Salir Ctrl + C\033[1;33m
[\033[1;30m1\033[1;33m] LIBEV                 ›   \033[1;33m
[\033[1;30m2\033[1;33m] ROCKET                ›   \033[1;33m
[\033[1;30m0\033[1;33m] < REGRESAR                 \033[1;33m"
read -p ": " opcao
else
opcao=$1
fi
case $opcao in
1)
configlibev;;
2)
configrocket;;
0)
cgh;;
esac
}
function configlibev(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Shadowsocks Libev\033[0m"
echo -e "\033[1;37m › /etc/shadowsocks-libev/config.json\033[0m"
cat /etc/shadowsocks-libev/config.json
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
function configrocket(){
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
echo -e "\033[1;37m › Configuracion Shadowsocks Rocket\033[0m"
echo -e "\033[1;37m › /etc/shadowsocks-r/config.json\033[0m"
cat /etc/shadowsocks-r/config.json
echo -e "[\033[1;31m-\033[1;33m]\033[1;30m =======================================\033[1;33m"
}
